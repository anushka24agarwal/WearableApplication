// Generated by Dagger (https://dagger.dev).
package com.motionapps.sensorbox.fragments;

import com.motionapps.sensorbox.fragments.displayers.GPSDisplayer;
import com.motionapps.sensorbox.fragments.displayers.SensorDisplayer;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InfoSensorFragment_MembersInjector implements MembersInjector<InfoSensorFragment> {
  private final Provider<GPSDisplayer> gpsDisplayerProvider;

  private final Provider<SensorDisplayer> sensorDisplayerProvider;

  public InfoSensorFragment_MembersInjector(Provider<GPSDisplayer> gpsDisplayerProvider,
      Provider<SensorDisplayer> sensorDisplayerProvider) {
    this.gpsDisplayerProvider = gpsDisplayerProvider;
    this.sensorDisplayerProvider = sensorDisplayerProvider;
  }

  public static MembersInjector<InfoSensorFragment> create(
      Provider<GPSDisplayer> gpsDisplayerProvider,
      Provider<SensorDisplayer> sensorDisplayerProvider) {
    return new InfoSensorFragment_MembersInjector(gpsDisplayerProvider, sensorDisplayerProvider);
  }

  @Override
  public void injectMembers(InfoSensorFragment instance) {
    injectGpsDisplayer(instance, gpsDisplayerProvider.get());
    injectSensorDisplayer(instance, sensorDisplayerProvider.get());
  }

  @InjectedFieldSignature("com.motionapps.sensorbox.fragments.InfoSensorFragment.gpsDisplayer")
  public static void injectGpsDisplayer(InfoSensorFragment instance, GPSDisplayer gpsDisplayer) {
    instance.gpsDisplayer = gpsDisplayer;
  }

  @InjectedFieldSignature("com.motionapps.sensorbox.fragments.InfoSensorFragment.sensorDisplayer")
  public static void injectSensorDisplayer(InfoSensorFragment instance,
      SensorDisplayer sensorDisplayer) {
    instance.sensorDisplayer = sensorDisplayer;
  }
}
