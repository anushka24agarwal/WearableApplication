// Generated by Dagger (https://dagger.dev).
package com.motionapps.sensorbox.di;

import android.content.Context;
import com.motionapps.sensorbox.fragments.displayers.GPSDisplayer;
import com.motionapps.sensorservices.handlers.GPSHandler;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("dagger.hilt.android.scopes.FragmentScoped")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GpsModule_ProvidesGPSDisplayerFactory implements Factory<GPSDisplayer> {
  private final Provider<Context> contextProvider;

  private final Provider<GPSHandler> gpsHandlerProvider;

  public GpsModule_ProvidesGPSDisplayerFactory(Provider<Context> contextProvider,
      Provider<GPSHandler> gpsHandlerProvider) {
    this.contextProvider = contextProvider;
    this.gpsHandlerProvider = gpsHandlerProvider;
  }

  @Override
  public GPSDisplayer get() {
    return providesGPSDisplayer(contextProvider.get(), gpsHandlerProvider.get());
  }

  public static GpsModule_ProvidesGPSDisplayerFactory create(Provider<Context> contextProvider,
      Provider<GPSHandler> gpsHandlerProvider) {
    return new GpsModule_ProvidesGPSDisplayerFactory(contextProvider, gpsHandlerProvider);
  }

  public static GPSDisplayer providesGPSDisplayer(Context context, GPSHandler gpsHandler) {
    return Preconditions.checkNotNullFromProvides(GpsModule.INSTANCE.providesGPSDisplayer(context, gpsHandler));
  }
}
